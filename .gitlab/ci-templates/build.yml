build:
  stage: build
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image:v0.4.0"
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.12-dind
  before_script:
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" ] && [ "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - export builder_image=$CI_APPLICATION_REPOSITORY:$CI_COMMIT_REF_NAME-builder
    - export image_previous="$CI_APPLICATION_REPOSITORY:$CI_COMMIT_BEFORE_SHA"
    - export image_tagged="$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
    - export image_latest="$CI_APPLICATION_REPOSITORY:latest"
  script:
    - |
      if [[ -n "$CI_REGISTRY" && -n "$CI_REGISTRY_USER" ]]; then
        echo "Logging to GitLab Container Registry with CI credentials..."
        echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
      fi

    ### Pulling prebuilt images
    - |
      if DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect $builder_image > /dev/null; then
        docker image pull --quiet $builder_image
      fi

    ### Using Dockerfile for branch
    - mv .gitlab/docker/Dockerfile ./Dockerfile
    - |
      if [[ "$CI_COMMIT_REF_NAME" != "master" ]]; then
        echo "Selected variables for Review"
        export APP_ENV="local"
        export APP_DEBUG="true"
      else
        echo "Selected variables for Production"
        export APP_ENV="production"
        export APP_DEBUG="false"
      fi

    ### Build executable image
    - |
      docker build \
        --cache-from=$builder_image \
        --build-arg CI_APPLICATION_TAG=$CI_APPLICATION_TAG \
        --build-arg CI_PROJECT_NAME=$CI_PROJECT_NAME \
        --build-arg DB_CONNECTION=$DB_CONNECTION \
        --build-arg APP_ENV=$APP_ENV \
        --build-arg APP_DEBUG=$APP_DEBUG \
        --tag $image_tagged \
        --tag $image_latest \
        --tag $builder_image \
        --network host \
        .

    - docker push $builder_image
    - docker push $image_latest
    - docker push $image_tagged
  only:
    - branches
    - tags
  except:
    refs:
      - /^test-.*$/
      - /^nocicd-.*$/
